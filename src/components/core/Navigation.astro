---
import type { ProfileContentfulInterface } from '../../lib/contentful';
import { NavigationLayoutEnum } from '../../types/enum';
import Socials from '../elements/Socials.astro';

export interface Props {
  layout: NavigationLayoutEnum;
  navigationLinks: Array<ProfileContentfulInterface>;
}

const { layout, navigationLinks } = Astro.props;
---

<header>
  <section>
    <nav>
      <div>
        <a href={layout === NavigationLayoutEnum.MAIN ? '#' : '/'}>
          <span class="sr-only">PLAKET INDUSTRIES</span>
          <img
            src="https://tailwindui.com/img/logos/mark.svg?color=teal&shade=500"
            alt=""
          />
        </a>
        {
          layout === NavigationLayoutEnum.MAIN && (
            <ul>
              {navigationLinks.map((n) => (
                <li>
                  <a href={`#${n.slug}`}>{n.abbreviation}</a>
                </li>
              ))}
            </ul>
          )
        }
        <section id="btn-open">
          <button type="button" aria-expanded="false">
            <span>Open main menu</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              aria-hidden="true"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
            </svg>
          </button>
        </section>
      </div>
      <div>
        <Socials />
      </div>
    </nav>
  </section>

  <section id="mobile-menu" class="hidden">
    <nav>
      <div>
        <img
          src="https://tailwindui.com/img/logos/mark.svg?color=teal&shade=500"
          alt=""
        />
        <button type="button" id="btn-close">
          <span>Close menu</span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      {
        layout === NavigationLayoutEnum.MAIN && (
          <ul id="mobile-ul">
            {navigationLinks.map((n) => (
              <li>
                <a href={`#${n.slug}`}>{n.title}</a>
              </li>
            ))}
          </ul>
        )
      }
      {layout !== NavigationLayoutEnum.MAIN && <a href="/">Accueil</a>}
      <Socials />
    </nav>
  </section>
</header>

<style lang="postcss">
  img {
    @apply h-8 w-auto;

    &:not(#mobile-menu) {
      @apply sm:h-10;
    }
  }

  header {
    @apply relative z-10 w-full;

    > section {
      @apply fixed inset-x-0 top-0 bg-white/70 backdrop-blur-2xl dark:bg-black/30;

      > nav {
        @apply justify-between lg:flex lg:items-center;

        > div {
          @apply flex shrink-0 items-center gap-x-2 max-lg:w-full max-lg:justify-between;
          &:last-child {
            @apply max-lg:hidden;
          }
        }

        button {
          @apply inline-flex items-center justify-center rounded-md bg-white p-2 text-slate-400 transition hover:bg-slate-50 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-teal-500 dark:bg-slate-900 dark:text-slate-100 dark:hover:bg-slate-900;

          > span {
            @apply sr-only;
          }
        }

        svg {
          @apply h-6 w-6 cursor-pointer text-slate-600 transition-colors hover:text-slate-800 dark:text-slate-400 dark:hover:text-slate-100;
        }
      }

      &#mobile-menu {
        @apply fixed inset-x-0 top-0 z-30 m-2 origin-top transform overflow-hidden rounded-lg p-2 transition;

        button {
          @apply -mr-2;
        }

        > nav {
          @apply flex w-full flex-col items-start justify-between px-5 pt-4;

          > div {
            @apply mb-4;
          }
        }
      }

      &:not(#mobile-menu) {
        > nav {
          @apply mx-auto flex max-w-7xl items-center justify-between px-6 py-4 xl:px-8;

          section {
            @apply -mr-2 flex items-center lg:hidden;
          }
        }
      }
    }
  }

  a {
    @apply block rounded-md px-3 py-2 text-base font-medium text-slate-900 transition hover:bg-slate-100 dark:text-slate-100 dark:hover:bg-slate-900;

    @media screen(lg) {
      @apply text-base font-medium text-slate-500 transition hover:text-slate-900 dark:text-slate-300 dark:hover:text-slate-100;
    }
  }

  ul {
    @apply hidden lg:ml-10 lg:flex lg:flex-row lg:gap-x-2 lg:font-medium;

    &#mobile-ul {
      @apply space-y-1 pr-2 max-lg:block;
    }

    li {
      @apply w-fit;
    }
  }
</style>

<script>
  const btnClose = document.getElementById('btn-close');
  const btnOpen = document.getElementById('btn-open');
  const menuMobile = document.getElementById('mobile-menu');
  const ulMobile = document.getElementById('mobile-ul');

  ulMobile?.addEventListener('click', () => {
    menuMobile?.classList.remove('block');
    menuMobile?.classList.add('hidden');
  });

  btnClose?.addEventListener('click', () => {
    menuMobile?.classList.remove('block');
    menuMobile?.classList.add('hidden');
  });

  btnOpen?.addEventListener('click', () => {
    menuMobile?.classList.remove('hidden');
    menuMobile?.classList.add('block');
  });
</script>
