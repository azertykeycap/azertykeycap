---
import { group } from 'radash';

import Layout from '../layouts/Layout.astro';

import {
  contentfulClient,
  KeycapArticleContentfulInterface,
  KeycapArticleType,
  ProfileContentfulInterface
} from '../lib/contentful';

import GoTop from '../components/elements/GoTop.astro';
import Article from '../components/articles/Article.astro';
import { NavigationLayoutEnum } from '../types/enum';

const articlesEntries =
  await contentfulClient.getEntries<KeycapArticleContentfulInterface>({
    content_type: 'article'
  });

const navigationLinksEntries =
  await contentfulClient.getEntries<ProfileContentfulInterface>({
    content_type: 'keycaps-profile',
    order: 'fields.title'
  });

const navigationLinks: Array<ProfileContentfulInterface> =
  navigationLinksEntries.items.map((n) => {
    const { title, slug, abbreviation } = n.fields;
    return { title, slug, abbreviation };
  });

const articles: Array<KeycapArticleType> = articlesEntries.items.map((e) => {
  const {
    img,
    title,
    profile,
    description,
    material,
    status,
    startDate,
    endDate,
    url,
    additionalUrl,
    warningText,
    isNew
  } = e.fields;

  return {
    img: img.fields.file.url,
    title,
    profile: profile.fields.title,
    profileId: profile.fields.slug,
    description,
    material,
    status,
    startDate: startDate
      ? new Date(startDate).toLocaleDateString('fr-FR')
      : undefined,
    endDate: endDate
      ? new Date(endDate).toLocaleDateString('fr-FR')
      : undefined,
    url,
    additionalUrl,
    warningText,
    isNew
  };
});

const articleByProfile = group(articles, (a) => a.profile);
---

<Layout
  layout={NavigationLayoutEnum.MAIN}
  navigationLinks={navigationLinks}
  title="Keycaps"
>
  <div slot="main">
    {
      Object.keys(articleByProfile)
        .sort()
        .map((a, i) => (
          <section id={navigationLinks.find((n) => a === n.title)?.slug}>
            <h3>{a}</h3>
            <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
              {articleByProfile[a]
                ?.sort((a, b) => (a.isNew === b.isNew ? 0 : a.isNew ? -1 : 1))
                ?.map((a, j) => (
                  <Article article={a} isHighPriority={i === 0 && j < 4} />
                ))}
            </div>
          </section>
        ))
    }
    <GoTop />
  </div>
</Layout>

<style>
  h3 {
    @apply mt-10 mb-8 text-2xl font-semibold dark:text-white;
  }
</style>
