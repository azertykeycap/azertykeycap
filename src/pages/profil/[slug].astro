---
export const prerender = false;

import Layout from '../../layouts/Layout.astro';

import ArticleList from '../../components/articles/ArticleList';
import GoTop from '../../components/elements/GoTop';

import { getArticles, getNavigationLinks } from '../../lib/contentful';

import { NavigationLayoutEnum } from '../../types/enum';

const navigationLinks = await getNavigationLinks();
const articles = await getArticles();

// export async function getStaticPaths() {
//   const navigationLinks = await getNavigationLinks();
//   return navigationLinks.map(({ slug }) => ({
//     params: { slug: slug }
//   }));
// }

const { slug } = Astro.params;

function shuffleArray<T>(array: T[]): T[] {
  const shuffledArray = [...array];

  for (let i = shuffledArray.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));

    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];
  }

  return shuffledArray;
}

// const articlesByProfile = articles.filter((a) => a.profile.slug === slug);

const shuffledArticlesByProfile = shuffleArray(
  articles.filter((a) => a.profile.slug === slug)
);

const profile = shuffledArticlesByProfile[0].profile;

Astro.response.headers.set(
  'Cache-Control',
  'public, max-age=0, s-maxage=3600, stale-while-revalidate=5400'
);
---

<Layout
  layout={NavigationLayoutEnum.MAIN}
  navigationLinks={navigationLinks}
  title={profile.title}
  description={profile.description}
  additionalSeoInfo={{
    canonical: `profil/${profile.slug}`,
    articles: shuffledArticlesByProfile
  }}
>
  <ArticleList
    slot="main"
    articles={shuffledArticlesByProfile}
    profile={profile}
    client:load
  />
  <GoTop slot="goto" client:load />
</Layout>
